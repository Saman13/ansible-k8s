---

- name: Is kube-scheduler installed
  ansible.builtin.stat:
    path: "{{ binary_extract_dir }}/kube-scheduler-{{ kube_scheduler_version }}"
  register: kube_scheduler_dir

- block:

  - name: Create scheduler directory
    ansible.builtin.file:
      path: "{{ binary_extract_dir }}/kube-scheduler-{{ kube_scheduler_version }}"
      state: directory

  - name: Download kube-scheduler from url
    ansible.builtin.get_url:
      url: https://dl.k8s.io/v{{ kube_scheduler_version }}/bin/linux/amd64/kube-scheduler
      dest: "{{ binary_extract_dir }}/kube-scheduler-{{ kube_scheduler_version }}"
    when:
      - install_mode == 'network'

  - name: Instail etcd from local dir
    ansible.builtin.copy:
      src: "{{ local_binary_dir }}/kube-scheduler"
      dest: "{{ binary_extract_dir }}/kube-scheduler-{{ kube_scheduler_version }}"
    when:
      - install_mode == 'local'

  - name: Create symlinks to /usr/local/bin
    ansible.builtin.file:
      src: "{{ binary_extract_dir }}/kube-scheduler-{{ kube_scheduler_version }}/kube-scheduler"
      path: "{{ binary_dir }}/kube-scheduler"
      state: link
      mode: a+x

  when:
    - not kube_scheduler_dir.stat.exists

- name: Copy file kube-scheduler config
  ansible.builtin.template:
    src: kube-scheduler.yaml.j2
    dest: "{{ kubernetes_dir }}/kube-scheduler.yaml"

- name: Ganerate config for services (set cluster)
  ansible.builtin.command: >
    kubectl config set-cluster k8s
    --certificate-authority={{ cert_dir }}/ca.crt
    --embed-certs=true
    --server=https://k8s-master.{{ domain_name }}:6443
    --kubeconfig={{ kubeconfig_dir }}/kube-scheduler.kubeconfig

- name: Ganerate config for services (set credentials)
  ansible.builtin.command: >
    kubectl config set-credentials system:kube-scheduler
    --client-certificate={{ cert_dir }}/kube-scheduler.crt
    --client-key={{ cert_dir }}/kube-scheduler.key
    --embed-certs=true
    --kubeconfig={{ kubeconfig_dir }}/kube-scheduler.kubeconfig

- name: Ganerate config for services (set context)
  ansible.builtin.command: >
    kubectl config set-context default
    --cluster=k8s
    --user=system:kube-scheduler
    --kubeconfig={{ kubeconfig_dir }}/kube-scheduler.kubeconfig

- name: Set default context for services config
  ansible.builtin.command: >
    kubectl config use-context default
    --kubeconfig={{ kubeconfig_dir }}/kube-scheduler.kubeconfig

- name: Install service kube-scheduler
  ansible.builtin.template:
    src: kube-scheduler.service.j2
    dest: /etc/systemd/system/kube-scheduler.service
    mode: 0644
  notify:
    - reload systemd

- name: Enable and start kube-scheduler
  ansible.builtin.systemd:
    name: kube-scheduler
    state: started
    enabled: yes

- name: Check started service
  ansible.builtin.service:
    name: kube-scheduler
    state: started
  register: kube_scheduler_service_status

- name: Terminate playbook if service is not running
  ansible.builtin.fail:
    msg: "The kube-scheduler service is not running. Playbook has stoped."
  when: kube_scheduler_service_status.state != 'started'
