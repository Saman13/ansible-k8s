---

- name: create sertificate directory
  ansible.builtin.file:
    path: "{{ cert_dir }}"
    state: directory
    mode: "0755"

- name: Generate a private key
  community.crypto.openssl_privatekey:
    path: "{{ cert_dir }}/ca.key"
    size: "{{ key_size }}"
    type: "{{ key_type }}"
    backup: yes

- name: Copy the private key to local certificate directory
  ansible.builtin.fetch:
    src: "{{ cert_dir }}/ca.key"
    dest: "{{ local_cert_dir }}/ca.key"
    flat: true

- name: Generate a certificate signing request with subject information
  community.crypto.openssl_csr:
    path: "{{ cert_dir }}/ca.csr"
    privatekey_path: "{{ cert_dir }}/ca.key"
    basic_constraints: "CA:TRUE"
    key_usage: 
      - cRLSign
      - keyCertSign
    use_common_name_for_san: false
    country_name: "{{ country }}"
    common_name: "CA"
    state_or_province_name: "Russia"
    locality_name: "Saint-Petersburg"

- name: Generate a self signed certificate
  community.crypto.x509_certificate:
    path: "{{ cert_dir }}/ca.crt"
    privatekey_path: "{{ cert_dir }}/ca.key"
    csr_path: "{{ cert_dir }}/ca.csr"
    provider: selfsigned

- name: Copy the self signed certificate to local certificate directory
  ansible.builtin.fetch:
    src: "{{ cert_dir }}/ca.crt"
    dest: "{{ local_cert_dir }}/ca.crt"
    flat: true

- name: Generate private key for component
  community.crypto.openssl_privatekey:
    path: "{{ cert_dir }}/{{ item }}.key"
    size: "{{ key_size }}"
    type: "{{ key_type }}"
  with_items:
    - "{{ k8s_components }}"
    - "{{ groups.worker }}"
    - "admin"

- name: Copy the private key components to local certificate directory
  ansible.builtin.fetch:
    src: "{{ cert_dir }}/{{ item }}.key"
    dest: "{{ local_cert_dir }}/{{ item }}.key"
    flat: true
  with_items:
    - "{{ k8s_components }}"
    - "{{ groups.worker }}"
    - "admin"

- name: Generate a certificate signing request with subject information
  community.crypto.openssl_csr:
    path: "{{ cert_dir }}/{{ item }}.csr"
    privatekey_path: "{{ cert_dir }}/{{ item }}.key"
    basic_constraints: "CA:FALSE"
    extended_key_usage:
      - clientAuth
      - serverAuth
    key_usage:
      - digitalSignature
      - keyEncipherment
    key_usage_critical: true
    country_name: "{{ country }}"
    common_name: "kubernetes"
    state_or_province_name: "Russia"
    locality_name: "Saint-Petersburg"
    subject_alt_name: "DNS:{{ item }},IP:127.0.0.1{% if item == 'kube-api-server' %},IP:10.32.0.1,DNS:kubernetes,DNS:kubernetes.default,DNS:kubernetes.default.svc,DNS:kubernetes.default.svc.cluster,DNS:kubernetes.svc.cluster.local,DNS:k8s-master.local,DNS:api-server.kubernetes.local{% endif %}"
    create_subject_key_identifier: yes
  with_items:
    - "{{ k8s_components }}"
    - "{{ groups.worker }}"
    - "admin"

- name: Generate a certificate
  community.crypto.x509_certificate:
    path: "{{ cert_dir }}/{{ item }}.crt"
    privatekey_path: "{{ cert_dir }}/{{ item }}.key"
    csr_path: "{{ cert_dir }}/{{ item }}.csr"
    provider: selfsigned
  with_items:
    - "{{ k8s_components }}"
    - "{{ groups.worker }}"
    - "admin"

- name: Copy the certificates components to local certificate directory
  ansible.builtin.fetch:
    src: "{{ cert_dir }}/{{ item }}.crt"
    dest: "{{ local_cert_dir }}/{{ item }}.crt"
    flat: true
  with_items:
    - "{{ k8s_components }}"
    - "{{ groups.worker }}"
    - "admin"
