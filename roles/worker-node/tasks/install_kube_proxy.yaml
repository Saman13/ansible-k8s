---

- name: Create kube-proxy config directory
  ansible.builtin.file:
    path: "{{ kube_proxy_config_dir }}"
    state: directory
    mode: '0700'
    owner: '{{ user }}'
    group: '{{ group }}'
  become: yes

- name: Is kube-proxy installed
  ansible.builtin.stat:
    path: "{{ binary_extract_dir }}/kube-proxy-{{ kube_proxy_version }}"
  register: kube_proxy_dir

- block:

  - name: Create kube-proxy directory
    ansible.builtin.file:
      path: "{{ binary_extract_dir }}/kube-proxy-{{ kube_proxy_version }}"
      state: directory
    become: yes

  - name: Extract kube-proxy
    ansible.builtin.get_url:
      url: https://dl.k8s.io/v{{ kube_proxy_version }}/bin/linux/amd64/kube-proxy
      dest: "{{ binary_extract_dir }}/kube-proxy-{{ kube_proxy_version }}"
      mode: u+x
    become: yes

  - name: Create symlinks to /usr/local/bin
    ansible.builtin.file:
      src: "{{ binary_extract_dir }}/kube-proxy-{{ kube_proxy_version }}/kube-proxy"
      path: "{{ binary_dir }}/kube-proxy"
      state: link
    become: yes

  when:
    - not kube_proxy_dir.stat.exists


- name: Copy file kube-proxy config
  ansible.builtin.template:
    src: kube_proxy_config.yaml.j2
    dest: "{{ kube_proxy_config_dir }}/kube-proxy-config.yaml"
  become: yes

- name: Ganerate config for services (set cluster)
  ansible.builtin.command: >
    kubectl config set-cluster k8s
    --certificate-authority={{ cert_dir }}/ca.crt
    --embed-certs=true
    --server=https://k8s-master.{{ domain_name }}:6443
    --kubeconfig={{ kube_proxy_config_dir }}/kube-proxy.kubeconfig
  become: yes

- name: Ganerate config for services (set credentials)
  ansible.builtin.command: >
    kubectl config set-credentials system:kube-proxy
    --client-certificate={{ cert_dir }}/kube-proxy.crt
    --client-key={{ cert_dir }}/kube-proxy.key
    --embed-certs=true
    --kubeconfig={{ kube_proxy_config_dir }}/kube-proxy.kubeconfig
  become: yes

- name: Ganerate config for services (set context)
  ansible.builtin.command: >
    kubectl config set-context default
    --cluster=k8s
    --user=system:kube-proxy
    --kubeconfig={{ kube_proxy_config_dir }}/kube-proxy.kubeconfig
  become: yes

- name: Set default context for services config
  ansible.builtin.command: >
    kubectl config use-context default
    --kubeconfig={{ kube_proxy_config_dir }}/kube-proxy.kubeconfig
  become: yes

- name: Install service kube-proxy
  ansible.builtin.template:
    src: kube-proxy.service.j2
    dest: /etc/systemd/system/kube-proxy.service
  notify:
    - reload systemd
  become: yes

- name: Enable and start kube-proxy
  ansible.builtin.systemd:
    name: kube-proxy
    state: started
    enabled: yes
  become: yes

- name: Check started service
  ansible.builtin.service:
    name: kube-proxy
    state: started
  register: kube_proxy_service_status

- name: Terminate playbook if service is not running
  ansible.builtin.fail:
    msg: "The kube-proxy service is not running. Playbook has stoped."
  when: kube_proxy_service_status.state != 'started'
