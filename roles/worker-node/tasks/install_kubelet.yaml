---

- name: Create kubelet directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ kubelet_config_dir }}"
    - "{{ kubelet_kubeconfig_dir }}"

- name: Is kubelet installed
  ansible.builtin.stat:
    path: "{{ binary_extract_dir }}/kubelet-{{ kubelet_version }}"
  register: kubelet_dir

- block:

  - name: Create kubelet directory
    ansible.builtin.file:
      path: "{{ binary_extract_dir }}/kubelet-{{ kubelet_version }}"
      state: directory

  - name: Download kubelet from network
    ansible.builtin.get_url:
      url: https://dl.k8s.io/v{{ kubelet_version }}/bin/linux/amd64/kubelet
      dest: "{{ binary_extract_dir }}/kubelet-{{ kubelet_version }}"
    when:
      - install_mode == 'network'

  - name: Download kubelet from local dir
    ansible.builtin.copy:
      src: "{{ local_binary_dir }}/kubelet"
      dest: "{{ binary_extract_dir }}/kubelet-{{ kubectl_version }}"
    when:
      - install_mode == 'local'

  - name: Create symlinks to /usr/local/bin
    ansible.builtin.file:
      src: "{{ binary_extract_dir }}/kubelet-{{ kubelet_version }}/kubelet"
      path: "{{ binary_dir }}/kubelet"
      state: link
      mode: u+x

  when:
    - not kubelet_dir.stat.exists


- name: Copy file kubelet config
  ansible.builtin.template:
    src: kubelet-config.yaml.j2
    dest: "{{ kubelet_config_dir }}/kubelet-config.yaml"

- name: Ganerate config for worker node  (set cluster)
  ansible.builtin.command: >
    kubectl config set-cluster k8s
    --certificate-authority={{ cert_dir }}/ca.crt
    --embed-certs=true
    --server=https://k8s-master.{{ domain_name }}:6443
    --kubeconfig={{ kubelet_kubeconfig_dir }}/kubeconfig

- name: Ganerate config for worker node (set credentials)
  ansible.builtin.command: >
    kubectl config set-credentials system:node:{{ inventory_hostname }}
    --client-certificate={{ cert_dir }}/{{ inventory_hostname }}.crt
    --client-key={{ cert_dir }}/{{ inventory_hostname }}.key
    --embed-certs=true
    --kubeconfig={{ kubelet_kubeconfig_dir }}/kubeconfig

- name: Ganerate config for worker node (set context)
  ansible.builtin.command: >
    kubectl config set-context default
    --cluster=k8s
    --user=system:node:{{ inventory_hostname }}
    --kubeconfig={{ kubelet_kubeconfig_dir }}/kubeconfig

- name: Set default context for services config
  ansible.builtin.command: >
    kubectl config use-context default
    --kubeconfig={{ kubelet_kubeconfig_dir }}/kubeconfig

- name: Install service kubelet
  ansible.builtin.template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service
  notify:
    - reload systemd

- name: Enable and start kubelet
  ansible.builtin.systemd:
    name: kubelet
    state: started
    enabled: yes

- name: Check started service
  ansible.builtin.service:
    name: kubelet
    state: started
  register: kubelet_service_status

- name: Terminate playbook if service is not running
  ansible.builtin.fail:
    msg: "The kubelet service is not running. Playbook has stoped."
  when: kubelet_service_status.state != 'started'
